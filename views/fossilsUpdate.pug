extends layout

block content
    h1= title
    - let fossilId = toShow._id
    - let fossilName = toShow.fossil_name
    - let fossilLocation = toShow.location
    - let discoveredYear = toShow.discovered_year

    // Display error message if there's one
    if message
        div.alert.alert-danger= message

    div.row(class='mb-2')
        div.mr-1 ID is:
        div #{fossilId}

    // Prepare the form for updating the fossil
    - let actionId = "/resource/fossils/" + fossilId
    form(id='FossilForm', action=actionId, method="PUT")
        div.form-group
            label(for='fossil_name') Fossil Name
            input#fossil_name(type='text', name='fossil_name', value=fossilName)

        div.form-group
            label(for='location') Location
            input#location(type='text', name='location', value=fossilLocation)

        div.form-group
            label(for='discovered_year') Discovered Year
            input#discovered_year(type='number', name='discovered_year', value=discoveredYear)

        input(type="submit")

    // Client-side script to intercept form submission
    script.
      document.forms['FossilForm'].addEventListener('submit', (event) => {
        event.preventDefault();
        // Show user that form is being submitted
        fetch(event.target.action, {
            method: 'PUT',
            body: new URLSearchParams(new FormData(event.target)) // Form data
        }).then((resp) => {
            return resp.json(); // Expecting a JSON response
        }).then((body) => {
            // Check if the response contains an error message
            if (body.error) {
                alert("Update failed: " + body.error); // Show the error message
            } else {
                alert("Update succeeded");
                // Optionally handle successful update, such as redirecting or updating the page
            }
        }).catch((error) => {
            alert("Update failed: " + error); // Show any network errors
        });
      });
